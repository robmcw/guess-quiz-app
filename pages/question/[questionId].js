import Head from 'next/head'
import { useRouter } from 'next/router'
import Link from 'next/link'
import styles from '../../styles/Home.module.css'
import { MongoClient } from 'mongodb'
import Piechart from '../components/piechart'

export async function getStaticPaths() {
    return {
        // To do: Ids should be fetched dynamically
        fallback: true,
        paths: [
            {
                params: {
                    questionId: '1'
                }
            }
        ]
    }
}

export async function getStaticProps(context) {

    require('dotenv').config();

    const client = await MongoClient.connect(process.env.MONGODBCREDENTIALS);

    const db = client.db();

    const questionsCollection = db.collection('questions');

    const questions = await questionsCollection.find().toArray();

    client.close()

    const questionId = context.params.questionId;

    return {
        props: {
            questions: questions.map(questions => ({
                title: questions.title,
                description: questions.description,
                unit: questions.unit,

                option1Text: questions.option1.text,
                option1Amount: questions.option1.amount,

                option2Text: questions.option2.text,
                option2Amount: questions.option2.amount,

                option3Text: questions.option3.text,
                option3Amount: questions.option3.amount,
                id: questions._id.toString()
            }))
        }
    }

}




export default function Question(props) {

    const router = useRouter()
    const {
        query: { questionId },
    } = router

    const option1Amount = props.questions[0].option1Amount;
    const option2Amount = props.questions[0].option2Amount;
    const option3Amount = props.questions[0].option3Amount;

    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <h1 className={styles.subtitle}>
                    Here are 3 {props.questions[0].title}. Click one to match it to a scenario.
                </h1>

                <Piechart
                    option1={option1Amount}
                    option2={option2Amount}
                    option3={option3Amount}
                    unit={props.questions[0].unit}
                />



                <Link href={`/result/${questionId}`} passHref>
                    <button className={styles.button}> Show result </button>
                </Link>

            </main>

            <footer className={styles.footer}>
                Powered by Robo
            </footer>
        </div>
    )
}